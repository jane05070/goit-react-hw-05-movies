{"version":3,"file":"static/js/103.14860ba3.chunk.js","mappings":"wMAGaA,EAAcC,IAAAA,OAAa,CACtCC,QAASC,EAAAA,GACTC,OAAQ,CACNC,QAASC,EAAAA,O,2HCJAC,EAAUC,EAAAA,EAAAA,GAAH,4GAOPC,EAAcD,EAAAA,EAAAA,GAAH,8VAKF,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,oBAU7BC,EAAoBN,EAAAA,EAAAA,IAAH,kGAOjBO,EAAWP,EAAAA,EAAAA,GAAH,8DAEV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,sB,SCtBlBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACb,EAAD,UACGW,EAAOG,KAAI,SAAAC,GACV,OACE,SAACb,EAAD,WACE,UAAC,KAAD,CAAMc,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACGG,EAAMK,aACL,SAACb,EAAD,CACEc,IAAKC,EAAAA,GAAe,QAAUP,EAAMK,YACpCG,IAAI,MAGN,SAAChB,EAAD,CAAmBc,IAAKG,EAASD,IAAI,MAEvC,SAACf,EAAD,UAAWO,EAAMU,YAVHV,EAAME,W,oEChBrBS,E,QAAQzB,EAAAA,GAAH,wGACC,SAAAE,GAAC,OAAIA,EAAEC,MAAMuB,MAAMC,KACvB,SAAAzB,GAAC,OAAIA,EAAEC,MAAMyB,UAAUC,MAE3B,SAAA3B,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,uB,sGCNxB,IAAMb,EAAW,+BACXG,EAAU,mCAEVuB,EAAe,8B,yJCCfS,G,QAAa,mCAAG,WAAMC,GAAN,kGAEFvC,EAAAA,EAAAA,IAAgB,gBAAiB,CACtDI,OAAQmC,IAHe,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,gCAOzBC,EAAAA,GAAAA,MAAA,6CAPyB,yDAAH,uD,oECDbC,GAAalC,EAAAA,EAAAA,GAAOmC,EAAAA,GAAPnC,CAAH,oTAKD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOgC,kBACvB,SAAAlC,GAAC,OAAIA,EAAEC,MAAMkC,MAAMC,SACnB,SAAApC,GAAC,OAAIA,EAAEC,MAAMuB,MAAMC,KAMzBY,GAAkBvC,EAAAA,EAAAA,GAAOwC,EAAAA,GAAPxC,CAAH,0PAIb,SAAAE,GAAC,OAAIA,EAAEC,MAAMyB,UAAUD,KAGpB,SAAAzB,GAAC,OAAIA,EAAEC,MAAMuB,MAAMe,KAClB,SAAAvC,GAAC,OAAIA,EAAEC,MAAMuB,MAAMe,KAIrB,SAAAvC,GAAC,OAAIA,EAAEC,MAAMyB,UAAUD,KAI3Be,EAAmB1C,EAAAA,EAAAA,OAAH,+QAIhB,SAAAE,GAAC,OAAIA,EAAEC,MAAMuB,MAAMiB,MACpB,SAAAzC,GAAC,OAAIA,EAAEC,MAAMkC,MAAMO,QACpB,SAAA1C,GAAC,OAAIA,EAAEC,MAAMC,OAAOyC,gBAKlB,SAAA3C,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,sB,SCnCpBsC,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,SAAC,KAAD,CACEC,cAAe,CAAElB,MAAK,OAAEiB,QAAF,IAAEA,EAAAA,EAAS,IACjCD,SAAU,SAAAG,GACRH,EAASG,IAHb,UAME,UAAChB,EAAD,YACE,SAACQ,EAAD,CAAkBS,KAAK,SAAvB,UACE,SAAC,MAAD,CAAUC,KAAK,YAGjB,SAACb,EAAD,CACEc,KAAK,QACLF,KAAK,OACLG,WAAS,EACTC,YAAY,0BC4BtB,EA5Ce,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FAEmB,MADbC,EADN,UACiBN,EAAaO,IAAI,eADlC,QAC6C,IAD7C,iEAK8BlC,EAAc,CACtCC,MAAOgC,EACPE,KAAM,IAPZ,gBAKYC,EALZ,EAKYA,QAIRL,EAAgBK,GATpB,6CADc,uBAAC,WAAD,wBAadC,KACC,CAACV,IAYJ,OACE,UAACW,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,SAJb,WAME,SAAC/C,EAAA,EAAD,uCACA,SAACqB,EAAD,CAAWC,SAlBO,SAAAC,GACpB,GAA2B,KAAvBA,EAAMjB,MAAM0C,OAAhB,CAIE,IAAMC,EAA6B,KAAhB1B,EAAMjB,MAAe,CAAEsB,KAAML,EAAMjB,OAAU,GAChE2B,EAAgBgB,QAJhBzC,EAAAA,EAAAA,IAAM,uBAAwB,KAgBMe,MAAOS,EAAaO,IAAI,WAC5D,SAACvD,EAAA,EAAD,CAAYC,OAAQkD,S","sources":["api/customAxios.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/ui/Title.js","constants/constantsApi.js","api/getMovieByKey.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/constantsApi';\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const MovList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\n\nexport const MovListItem = styled.li`\n  width: 240px;\n  margin: 10px;\n  text-decoration: none;\n  border-radius: 12px;\n  background-color: ${p => p.theme.colors.secondaryBgColor};\n  box-shadow: 9px 9px 16px rgba(163, 177, 198, 0.6),\n    -9px -9px 16px rgba(255, 255, 255, 0.5);\n  overflow: hidden;\n  transition: transform 250ms ease-in-out;\n  :hover {\n    transform: translateY(-5px);\n  }\n`;\n\nexport const MovListItemPoster = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const MovTitle = styled.h3`\n  text-align: center;\n  color: ${p => p.theme.colors.secondaryColorBlue};\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport NoImage from '../../asset/No-Image-Placeholder.png';\nimport { BASE_IMG_URL } from '../../constants/constantsApi';\nimport PropTypes from 'prop-types';\nimport {\n  MovList,\n  MovListItem,\n  MovListItemPoster,\n  MovTitle,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovList>\n      {movies.map(movie => {\n        return (\n          <MovListItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.poster_path ? (\n                <MovListItemPoster\n                  src={BASE_IMG_URL + '/w300' + movie.poster_path}\n                  alt=\"\"\n                />\n              ) : (\n                <MovListItemPoster src={NoImage} alt=\"\" />\n              )}\n              <MovTitle>{movie.title}</MovTitle>\n            </Link>\n          </MovListItem>\n        );\n      })}\n    </MovList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space.l};\n  font-size: ${p => p.theme.fontSizes.xl};\n  text-align: center;\n  color: ${p => p.theme.colors.secondaryColorBlue};\n`;\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e98b0e0d9b862c3ddb556a3bb2ced479';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p';\n","import { customAxios } from './customAxios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const getMovieByKey = async query => {\n  try {\n    const { data } = await customAxios.get('/search/movie', {\n      params: query,\n    });\n    return data;\n  } catch (error) {\n    toast.error(`Sorry, something went wrong ${error}`);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 400px;\n  background-color: ${p => p.theme.colors.secondaryColor};\n  border-radius: ${p => p.theme.radii.small};\n  margin-bottom: ${p => p.theme.space.l};\n  overflow: hidden;\n  box-shadow: 9px 9px 16px rgba(163, 177, 198, 0.6),\n    -9px -9px 16px rgba(255, 255, 255, 0.5);\n`;\n\nexport const SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: ${p => p.theme.fontSizes.l};\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space.m};\n  padding-right: ${p => p.theme.space.m};\n\n  ::placeholder {\n    font: inherit;\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space.ml};\n  border: ${p => p.theme.radii.none};\n  color: ${p => p.theme.colors.primaryColor};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    color: ${p => p.theme.colors.secondaryColorBlue};\n  }\n`;\n","import { Formik } from 'formik';\nimport { ImSearch } from 'react-icons/im';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit, value }) => {\n  return (\n    <Formik\n      initialValues={{ query: value ?? '' }}\n      onSubmit={values => {\n        onSubmit(values);\n      }}\n    >\n      <SearchForm>\n        <SearchFormButton type=\"submit\">\n          <ImSearch size=\"20px\" />\n        </SearchFormButton>\n\n        <SearchFormInput\n          name=\"query\"\n          type=\"text\"\n          autoFocus\n          placeholder=\"Enter a keyword\"\n        />\n      </SearchForm>\n    </Formik>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByKey } from 'api/getMovieByKey';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Title } from 'components/ui/Title';\nimport { toast } from 'react-toastify';\nimport { Box } from 'styles/Box';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResult, setSearchResult] = useState([]);\n\n  useEffect(() => {\n    async function onKeyWord() {\n      let filmName = searchParams.get('name') ?? '';\n      if (filmName === '') {\n        return;\n      } else {\n        const { results } = await getMovieByKey({\n          query: filmName,\n          page: 1,\n        });\n        setSearchResult(results);\n      }\n    }\n    onKeyWord();\n  }, [searchParams]);\n\n  const handlerSubmit = value => {\n    if (value.query.trim() === '') {\n      toast('Please, enter a word', {});\n      return;\n    } else {\n      const nextParams = value.query !== '' ? { name: value.query } : {};\n      setSearchParams(nextParams);\n    }\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Title>Search movie by keyword</Title>\n      <Searchbar onSubmit={handlerSubmit} value={searchParams.get('name')} />\n      <MoviesList movies={searchResult} />\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["customAxios","axios","baseURL","BASE_URL","params","api_key","API_KEY","MovList","styled","MovListItem","p","theme","colors","secondaryBgColor","MovListItemPoster","MovTitle","secondaryColorBlue","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","BASE_IMG_URL","alt","NoImage","title","Title","space","l","fontSizes","xl","getMovieByKey","query","data","toast","SearchForm","Form","secondaryColor","radii","small","SearchFormInput","Field","m","SearchFormButton","ml","none","primaryColor","Searchbar","onSubmit","value","initialValues","values","type","size","name","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","searchResult","setSearchResult","useEffect","filmName","get","page","results","onKeyWord","Box","display","flexDirection","justifyContent","alignItems","trim","nextParams"],"sourceRoot":""}