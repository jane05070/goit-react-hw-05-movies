{"version":3,"file":"static/js/868.827f375a.chunk.js","mappings":"wMAGaA,EAAcC,IAAAA,OAAa,CACtCC,QAASC,EAAAA,GACTC,OAAQ,CACNC,QAASC,EAAAA,O,sGCNN,IAAMH,EAAW,+BACXG,EAAU,mCAEVC,EAAe,8B,0JCCfC,EAAU,mCAAG,WAAMC,GAAN,gGAECT,EAAAA,EAAAA,IAAA,iBAA0BS,EAA1B,aAFD,cAEhBC,EAFgB,yBAGfA,EAASC,MAHM,gCAKtBC,EAAAA,GAAAA,MAAY,uBAAwB,IALd,yDAAH,sD,mBCFVC,EAAkBC,EAAAA,EAAAA,GAAH,gHAEP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAEzB,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,KAC3B,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,gBAGlBC,EAAeT,EAAAA,EAAAA,EAAH,uCACd,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,OAAOG,sBAGlBC,EAASX,EAAAA,EAAAA,EAAH,uCACR,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,OAAOG,sB,SCblBE,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,OAAS,EAChBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,UAACjB,EAAD,YACE,SAACU,EAAD,UAAeO,EAAOC,UACtB,uBAAID,EAAOE,YAFSF,EAAOrB,QAM7B,SAACgB,EAAD,mECSV,EAjBgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAGY7B,EAAW2B,GAHvB,gBAEYG,EAFZ,EAEI3B,KAAQ2B,QAEVJ,EAAWI,GAJb,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACJ,KAEG,yBAAMR,EAAQC,OAAS,IAAK,SAACF,EAAD,CAAaC,QAASA","sources":["api/customAxios.js","constants/constantsApi.js","api/getReviews.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../constants/constantsApi';\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e98b0e0d9b862c3ddb556a3bb2ced479';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p';\n","import { customAxios } from './customAxios';\nimport { toast } from 'react-toastify';\n\n\nexport const getReviews = async id => {\n  try {\n    const response = await customAxios.get(`/movie/${id}/reviews`);\n    return response.data;\n  } catch (error) {\n    toast.error('Sorry, backend error', {});\n  }\n};\n\n","import styled from '@emotion/styled';\n\nexport const ReviewsListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space.ml};\n  }\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.primaryColor};\n`;\n\nexport const ReviewerName = styled.p`\n  color: ${p => p.theme.colors.secondaryColorBlue};\n`;\n\nexport const RevErr = styled.p`\n  color: ${p => p.theme.colors.secondaryColorBlue};\n`;"," import { ReviewsListItem, ReviewerName, RevErr } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ReviewsListItem key={review.id}>\n            <ReviewerName>{review.author}</ReviewerName>\n            <p>{review.content}</p>\n          </ReviewsListItem>\n        ))\n      ) : (\n          <RevErr>\"Sorry, we don't have any reviews on this movie\"</RevErr>\n         \n      )}\n    </ul>\n  );\n};\n\n\n\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'api/getReviews';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function onReviews() {\n      const {\n        data: { results },\n      } = await getReviews(movieId);\n      setReviews(results);\n    }\n    onReviews();\n  }, [movieId]);\n\n  return <div>{reviews.length > 0 && <ReviewsList reviews={reviews} />}</div>;\n};\n\nexport default Reviews;\n"],"names":["customAxios","axios","baseURL","BASE_URL","params","api_key","API_KEY","BASE_IMG_URL","getReviews","id","response","data","toast","ReviewsListItem","styled","p","theme","space","ml","fontSizes","s","colors","primaryColor","ReviewerName","secondaryColorBlue","RevErr","ReviewsList","reviews","length","map","review","author","content","useState","setReviews","movieId","useParams","useEffect","results","onReviews"],"sourceRoot":""}